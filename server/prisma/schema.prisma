// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Competencia {
  id_competencia Int        @id @default(autoincrement())
  descripcion    String     @unique
  estado         Boolean    @default(true)
  PuestoCompetencia PuestoCompetencia[]
  PersonaCompetencia PersonaCompetencia[]
}

model Idioma {
  id_idioma Int       @id @default(autoincrement())
  nombre    String    @unique
  estado    Boolean   @default(true)
  PuestoIdioma PuestoIdioma[]
  PersonaIdioma PersonaIdioma[]
}

model Capacitacion {
  id_capacitacion Int       @id @default(autoincrement())
  persona_id      Int
  descripcion     String
  nivel           String
  fecha_desde     DateTime
  fecha_hasta     DateTime
  institucion     String
  Persona         Persona   @relation(fields: [persona_id], references: [id_persona])
}

model Puesto {
  id_puesto           Int                 @id @default(autoincrement())
  nombre              String              @unique
  descripcion          String        
  nivel_riesgo        String              
  nivel_minimo_salario Float              @default(0.0)
  nivel_maximo_salario Float              @default(0.0)
  estado              Boolean             @default(true)
  PuestoCompetencia   PuestoCompetencia[]
  PuestoIdioma        PuestoIdioma[]
  Candidato           Candidato[]
  Empleado            Empleado[]
}

model PuestoCompetencia {
  id_puesto_competencia Int         @id @default(autoincrement())
  puesto_id            Int
  competencia_id       Int
  Puesto               Puesto       @relation(fields: [puesto_id], references: [id_puesto])
  Competencia          Competencia  @relation(fields: [competencia_id], references: [id_competencia])
}

model PuestoIdioma {
  id         Int      @id @default(autoincrement())
  puesto_id  Int
  idioma_id  Int
  Puesto     Puesto   @relation(fields: [puesto_id], references: [id_puesto])
  Idioma     Idioma   @relation(fields: [idioma_id], references: [id_idioma])
}

model PersonaIdioma {
  id         Int        @id @default(autoincrement())
  persona_id Int
  idioma_id  Int
  Persona    Persona   @relation(fields: [persona_id], references: [id_persona])
  Idioma     Idioma     @relation(fields: [idioma_id], references: [id_idioma])
}

model Candidato {
  id_candidato          Int                 @id @default(autoincrement())
  persona_id            Int
  puesto_aspirado_id    Int
  departamento_id       Int
  salario_aspirado      Float               @default(0.0)
  recomendado_por       String
  estado_id             Int
  estado                Boolean             @default(true)
  Puesto                Puesto              @relation(fields: [puesto_aspirado_id], references: [id_puesto])
  Estado                Estado              @relation(fields: [estado_id], references: [id_estado])
  Departamento          Departamento        @relation(fields: [departamento_id], references: [id_departamento])
  Persona               Persona             @relation(fields: [persona_id], references: [id_persona])
}

model PersonaCompetencia {
  id_puesto_competencia Int   @id @default(autoincrement())
  persona_id            Int
  competencia_id        Int
  Persona               Persona  @relation(fields: [persona_id], references: [id_persona])
  Competencia           Competencia @relation(fields: [competencia_id], references: [id_competencia])
}

model ExperienciaLaboral {
  id_experiencia_laboral Int        @id @default(autoincrement())
  persona_id             Int
  empresa                String     
  puesto_ocupado         String
  fecha_desde            DateTime
  fecha_hasta            DateTime
  salario                Float      @default(0.0)
  Persona                Persona    @relation(fields: [persona_id], references: [id_persona])
}

model Empleado {
  id_empleado     Int     @id @default(autoincrement())
  persona_id      Int
  fecha_ingreso   DateTime
  puesto_id       Int
  departamento_id Int
  salario_mensual Float     @default(0.0)
  estado          Boolean   @default(true)
  fecha_creacion  DateTime  @default(now())
  Puesto          Puesto    @relation(fields: [puesto_id], references: [id_puesto])
  Persona          Persona    @relation(fields: [persona_id], references: [id_persona])
  Departamento    Departamento @relation(fields: [departamento_id], references: [id_departamento])
  Usuario         Usuario[]
}

model Usuario {
  id_usuario  Int       @id @default(autoincrement())
  empleado_id Int
  user        String    @unique
  password    String
  rol_id      Int
  estado      Boolean   @default(true)
  Empleado    Empleado  @relation(fields: [empleado_id], references: [id_empleado])
  Rol         Rol       @relation(fields: [rol_id], references: [id_rol])
}

model Rol {
  id_rol Int        @id @default(autoincrement())
  nombre String     @unique
  estado Boolean    @default(true)
  Usuario Usuario[]
}

model Departamento {
  id_departamento Int   @id @default(autoincrement())
  nombre          String    @unique
  estado          Boolean   @default(true)
  Empleado        Empleado[]
  Candidato       Candidato[]
}

model Estado {
  id_estado   Int     @id @default(autoincrement())
  descripcion String  @unique
  estado      Boolean @default(true)
  Candidato   Candidato[]
}

model Persona {
  id_persona  Int     @id @default(autoincrement())
  cedula      String  @unique
  nombre      String
  estado      Boolean   @default(true)
  Candidato             Candidato[]
  PersonaCompetencia    PersonaCompetencia[]
  PersonaIdioma         PersonaIdioma[]
  Capacitacion          Capacitacion[]
  ExperienciaLaboral    ExperienciaLaboral[]
  Empleado              Empleado[]
}

